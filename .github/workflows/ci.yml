name: CI
on:
  - push
  - pull_request

jobs:
  test:
    name: ${{ matrix.tox_env }}
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: >-
          --health-cmd="mariadb-admin ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: test_sa_filters
          POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=en_US.utf8 --lc-ctype=en_US.utf8"
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        include:
          - python: '3.7'
            tox_env: 'py37-sqlalchemy1.4'
          - python: '3.8'
            tox_env: 'py38-sqlalchemy1.4'
          - python: '3.9'
            tox_env: 'py39-sqlalchemy1.4'
          - python: '3.10'
            tox_env: 'py310-sqlalchemy1.4'

          - python: '3.7'
            tox_env: 'py37-sqlalchemy2.0'
          - python: '3.8'
            tox_env: 'py38-sqlalchemy2.0'
          - python: '3.9'
            tox_env: 'py39-sqlalchemy2.0'
          - python: '3.10'
            tox_env: 'py310-sqlalchemy2.0'

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}
      - run: pip install tox
      - run: tox -e ${{ matrix.tox_env }}

  deploy:
    name: Build and publish
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.7
      - name: Install pypa/build
        run: >-
          python -m
          pip install wheel
          --upgrade pip
          --user
      - name: Build a binary wheel and a source tarball
        run: python setup.py sdist bdist_wheel
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
